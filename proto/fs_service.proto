syntax = "proto3";

option go_package = "material/filesystem/proto/fsservice";

package fsservice;

service FileSystemService {
    // Create a new directory, optionally create intermediate directories
    rpc Mkdir(Request) returns (Response) {}
    // Create a new file
    rpc CreateRegularFile(Request) returns (Response) {}
    // Change the working directory
    rpc ChangeWorkingDirectory(Request) returns (Response) {}
    // Delete a file or directory
    rpc Remove(Request) returns (Response) {}
    // Find all files matching names in path
    rpc FindFiles(Request) returns (Response) {}
    // List files in directory
    rpc ListFiles(Request) returns (Response) {}
    // Move file or directory to a new location
    rpc Move(Request) returns (Response) {}
    // Copy file or directory to a given location
    rpc Copy(Request) returns (Response) {}
}

message Request {
    // The session id
    string session_id = 1;
    oneof request {
        MkdirRequest mkdir = 2;
        CreateRegularFileRequest create_regular_file = 3;
        ChangeWorkingDirectoryRequest change_working_directory = 4;
        RemoveRequest remove = 5;
        FindFilesRequest find = 6;
        ListFilesRequest list = 7;
        CopyRequest copy = 8;
        MoveRequest move = 9;
    }
}

message Response {
    // The session id
    optional string error = 1;
    oneof response {
        MkdirResponse mkdir = 2;
        CreateRegularFileResponse create_regular_file = 3;
        ChangeWorkingDirectoryResponse change_working_directory = 4;
        RemoveResponse remove = 5;
        FindFilesResponse find = 6;
        ListFilesResponse list = 7;
        CopyResponse copy = 8;
        MoveResponse move = 9;
    }
}

message MkdirRequest {
    // New directory path (absolute or relative)
    string path = 1;
    // Optionally create intermediate directories
    optional bool recursive = 2;
}

message MkdirResponse {
    // New directory name
    string name = 1;
}

message CreateRegularFileRequest {
    // New file path (absolute or relative)
    string path = 1;
}

message CreateRegularFileResponse {
    // New file name
    string name = 1;
}

message ChangeWorkingDirectoryRequest {
    // New working directory path (absolute or relative)
    string path = 1;
}

message ChangeWorkingDirectoryResponse {
    // New file name
    string name = 1;
}

message RemoveRequest {
    // File to remove path (absolute or relative)
    string path = 1;
    // If true, remove directory and subdirectory
    optional bool recursive = 2;
}

message RemoveResponse {
}

message FindFilesRequest {
    // File name to search
    string name = 1;
    // Location where to search the file (absolute or relative)
    string path = 2;
}

message FindFilesResponse {
    // List of files matching the search criteria
    repeated string paths = 1;
}

message ListFilesRequest {
    // Location where to list the files (absolute or relative)
    string path = 1;
}

message ListFilesResponse {
    // List of file names in location
    repeated string names = 1;
}

message CopyRequest {
    // Location frome where to copy the file/directory from
    string src_path = 1;
    // Destination of the new file/directory
    string dest_path = 2;
}

message CopyResponse {
    // New directory/file name
    string name = 1;
}

message MoveRequest {
    // Location frome where to move the file/directory from
    string src_path = 1;
    // Destination of the file/directory
    string dest_path = 2;
}

message MoveResponse {
    // Moved directory/file name
    string name = 1;
}
